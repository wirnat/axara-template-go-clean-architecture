package {{.ModelSnake}}_usecase_v1

import (
	"context"
	"{{.Meta.import_model}}"
	"{{.Meta.import_repository}}"
	"{{.Meta.import_request}}"
	"github.com/google/uuid"
)

type {{.ModelCamel}}StoreUsecase struct {
	{{.ModelCamel}}Store {{.ModelSnake}}_repository.{{.Model}}Store
}

func New{{.Model}}StoreUsecase({{.ModelCamel}}Store {{.ModelSnake}}_repository.{{.Model}}Store) *{{.ModelCamel}}StoreUsecase {
	return &{{.ModelCamel}}StoreUsecase{
	{{- .ModelCamel}}Store: {{.ModelCamel}}Store	}
}

func (u {{.ModelCamel}}StoreUsecase) Store(ctx context.Context, param {{.ModelSnake}}_request.{{.Model}}Store) (r model.{{.Model}}, err error) {
	{{- range $m:=.ModelFields }}
        {{- if $m.Meta.autofill}}
        {{else}}
        {{- if eq $m.Name "UUID"}}
        r.{{- $m.Name}} = uuid.New().String()
        {{- else }}
        r.{{- $m.Name}} = param.{{$m.Name}}
        {{- end}}
        {{- end}}
        {{- end}}

    	err = u.{{.ModelCamel}}Store.Store(ctx, &r)
    	return
}
